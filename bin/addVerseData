#!/usr/bin/env perl

use strict;

my $wget = `which wget`; 
chomp $wget;
if ($wget =~ /^\s*$/) {
	die "Cannot find wget tool, install such as 'brew install wget'";
}

my $dataurl = "https://www.tassomusic.org/data/indexes/all-verses.aton";

my @contents = `wget $dataurl -O -`;

my %VERSEINFO = getVerseInfo(@contents);

my @files = sort glob("*/kern/*.krn");

foreach my $file (@files) {
	my $id = $file;
	$id =~ s/.*\///;
	$id =~ /^([A-Z][a-z][a-z]\d*)/;
	$id = $1;
print "ID = $id\n";
	my $entry = $VERSEINFO{$id};
	updateVerseDataInFile($file, $entry);
}


exit(0);


##############################
##
## updateVerseDataInFile --
##

sub updateVerseDataInFile {
	my ($file, $entry) = @_;
	print "Processing $file\n";

	if ($entry =~ /^\s*$/) {
		die "Entry is empty for $file\n";
	}

	open (FILE, $file) or die "Cannot read $file\n";
	my @contents = <FILE>;
	close FILE;

	my $verseDataStart = -1;
	my $verseDataEnd = -1;

	for (my $i=0; $i<@contents; $i++) {
		my $line = $contents[$i];
		chomp $line;
		if ($line =~ /^!!\@\@BEGIN:\s*VERSEDATA\s*$/) {
			$verseDataStart = $i;
			next;
		}
		if ($line =~ /^!!\@\@END:\s*VERSEDATA\s*$/) {
			$verseDataEnd = $i;
			next;
		}
	}
	
	my @elines = split(/\n/, $entry);
	my $eout = "";
	foreach my $line (@elines) {
		chomp $line;
		$eout .= "!!$line\n";
	}

	open(OFILE, ">$file") or die "Cannot write to $file\n";

	for (my $i=0; $i<@contents; $i++) {
		my $line = $contents[$i];
		chomp $line;
		if ($i == $verseDataStart) {
			print OFILE $eout;
			next;
		}
		if (($i > $verseDataStart) and ($i <= $verseDataEnd)) {
			next;
		}
		print OFILE $line, "\n";
	}

	if (($verseDataStart < 0) && ($verseDataEnd < 0)) {
		print OFILE $eout;
	}

	close OFILE;
}



##############################
##
## getVerseInfo --
##

sub getVerseInfo {
	my @contents = @_;

	my %output;
	my $entry = "";
	my $id = "";

	foreach my $line (@contents) {
		if ($line =~ /^\@\@BEGIN:\s*VERSEDATA\s*$/) {
			$entry = $line;
			$id = "";
			next;
		}
		if ($line =~ /^\@\@END:\s*VERSEDATA\s*$/) {
			if ($id =~ /^\s*$/) {
				$entry = "";
				$id = "";
				next;
			}
			$entry .= $line;
			$output{$id} = $entry;
			$entry = "";
			$id = "";
			next;
		}
		$entry .= $line;
		if ($line =~ /^\@CATALOGNUM:\s*([^\s]+)\s*$/) {
			$id = $1;
		}
	}

	return %output;
}



